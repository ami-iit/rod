[project]
name = "rod"
dynamic = ["version"]
requires-python = ">= 3.10"
description = "The ultimate Python tool for RObot Descriptions processing."
authors = [
    { name = "Diego Ferigo", email = "dgferigo@gmail.com" },
]
maintainers = [
    { name = "Filippo Luca Ferretti", email = "filippo.ferretti@iit.it" },
    { name = "Carlotta Sartore", email = "carlotta.sartore@iit.it" },
]
license.file = "LICENSE"
keywords = [
    "description",
    "gazebo",
    "parser",
    "robot",
    "robotics",
    "ros",
    "sdf",
    "sdformat",
    "simulator",
    "simulation",
    "urdf",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Robot Framework",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Games/Entertainment :: Simulation",
]
dependencies = [
    "coloredlogs",
    "mashumaro",
    "numpy",
    "packaging",
    "resolve-robotics-uri-py",
    "scipy",
    "trimesh",
    "xmltodict",
]

[project.optional-dependencies]
style = [
    "black ~= 24.0",
    "isort",
]
pptree = [
    "pptree",
]
testing = [
    "idyntree >= 12.2.1",
    "pytest >=6.0",
    "pytest-icdiff",
    "robot-descriptions",
]
all = [
    "rod[style,pptree,testing]",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Changelog = "https://github.com/ami-iit/rod/releases"
Source = "https://github.com/ami-iit/rod"
Tracker = "https://github.com/ami-iit/rod/issues"

# ===========
# Build tools
# ===========

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=64",
    "setuptools-scm[toml]>=8",
    "wheel",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools_scm]
local_scheme = "dirty-tag"

# =================
# Style and testing
# =================

[tool.black]
line-length = 88

[tool.isort]
multi_line_output = 3
profile = "black"

[tool.pytest.ini_options]
addopts = "-rsxX -v --strict-markers"
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.cibuildwheel]
build-frontend = "build"


# ==================
# Ruff configuration
# ==================

[tool.ruff]
exclude = [
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    ".devcontainer",
    "__pycache__",
]
preview = true

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "B",
    "E",
    "F",
    "I",
    "W",
    "RUF",
    "UP",
    "YTT",
]

ignore = [
    "B008", # Function call in default argument
    "B024", # Abstract base class without abstract methods
    "E402", # Module level import not at top of file
    "E501", # Line too long
    "E731", # Do not assign a `lambda` expression, use a `def`
    "E741", # Ambiguous variable name
    "I001", # Import block is unsorted or unformatted
    "RUF003", # Ambigous unicode character in comment
]

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files
"__init__.py" = ["F401", "F821"]
